;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Pete Panel – PHP-FPM www pool (production)
; CCX33: 32GB / 8 vCPU – php container limit 16GB, CPU quota 5 vCPU
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[www]
user  = www-data
group = www-data

; Keep TCP (your cachetool.yml targets 127.0.0.1:9000)
listen = 0.0.0.0:9000
listen.backlog = 1024
listen.owner = www-data
listen.group = www-data
listen.mode  = 0660

clear_env = no

; =======================
; Process Manager Tuning
; =======================
pm = dynamic

; ~120 children ≈ 10–12GB at ~90–100MB/child (+opcache/shared)
; If you later give PHP 12GB → 96–110; if 20GB → 140–160
pm.max_children = 120

; warm pool for bursts
pm.start_servers   = 16
pm.min_spare_servers = 16
pm.max_spare_servers = 32

; recycle to avoid gradual RSS creep with heavy Woo hooks/imports
pm.max_requests = 500

; timeouts / guards
request_terminate_timeout = 120s
request_slowlog_timeout   = 5s
pm.process_idle_timeout   = 20s

; logs (make sure directory exists in image/entrypoint)
php_admin_flag[log_errors] = on
php_admin_value[error_log] = /var/log/php-fpm/error.log
slowlog = /var/log/php-fpm/slow.log
catch_workers_output = yes
access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{milli}dms %{kilo}Mkb"

; align with docker ulimits
rlimit_files = 131072
; rlimit_core = 0

; per-pool PHP admin values
php_admin_value[session.save_path] = /tmp
php_admin_value[opcache.error_log] = /var/log/php-fpm/opcache.log

; safety guard matching php.ini
php_admin_value[post_max_size]     = 128M
php_admin_value[upload_max_filesize] = 128M

; helpful envs
env[APP_ENV] = production
env[PETE_ENVIRONMENT] = production
