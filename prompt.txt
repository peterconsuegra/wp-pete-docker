**Context:** You are an experienced DevOps devolver with extensive knowlege in Docker. Below are the code files of a Docker LAMP app

**apache/modsecurity_status.cgi**
```
#!/bin/bash
# simple CGI that reloads Apache only if the shared secret matches

SECRET="__RELOAD_SECRET__"    # will be substituted in the Dockerfile

echo "Content-Type: text/plain"
echo

if [ "$HTTP_X_RELOAD_SECRET" != "$SECRET" ]; then
  echo "Forbidden"
  exit 0
fi

if test "$mod_sw" = 'on'; then

		echo "ex -sc '%s/SecRuleEngine Off/SecRuleEngine On/|x' /etc/modsecurity/modsecurity.conf"
		sudo ex -sc '%s/SecRuleEngine Off/SecRuleEngine On/|x' /etc/modsecurity/modsecurity.conf

fi

if test "$mod_sw" = 'off'; then

		echo "ex -sc '%s/SecRuleEngine On/SecRuleEngine Off/|x' /etc/modsecurity/modsecurity.conf"
		sudo ex -sc '%s/SecRuleEngine On/SecRuleEngine Off/|x' /etc/modsecurity/modsecurity.conf

fi

# graceful reload (keeps current connections)
sudo /usr/sbin/apachectl -k graceful

echo "Mod security status updated"

```

========================================

**apache/pete.conf**
```
<VirtualHost _default_:80>
    ServerName localhost
    DocumentRoot /var/www/html/Pete/public

    <Directory /var/www/html/Pete/public>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    # send PHP to FPM
    <FilesMatch "\.php$">
        SetHandler "proxy:fcgi://php:9000"
    </FilesMatch>

    # graceful-reload hook (now inside the vhost)
    ScriptAlias /internal-reload /usr/local/bin/reload_apache.cgi
    <Directory "/usr/local/bin">
        Options +ExecCGI
        Require local
        Require ip 172.16.0.0/12
    </Directory>

    ScriptAlias /internal-certbot /usr/local/bin/issue_cert.cgi
    <Directory "/usr/local/bin">
        Options +ExecCGI
        Require local
        Require ip 172.16.0.0/12
    </Directory>

    ScriptAlias /modsecurity-status /usr/local/bin/modsecurity_status.cgi
    <Directory "/usr/local/bin">
        Options +ExecCGI
        Require local
        Require ip 172.16.0.0/12
    </Directory>

    LogLevel debug
    ErrorLog  /var/www/html/wwwlog/Pete/error.log
    CustomLog /var/www/html/wwwlog/Pete/access.log combined
</VirtualHost>
```

========================================

**apache/issue_cert.cgi**
```
#!/bin/bash
# --------------------------------------------------------------------
# Trigger Certbot inside the Apache container
# --------------------------------------------------------------------
SECRET="__RELOAD_SECRET__"        # substituted at build time

echo "Content-Type: text/plain"
echo

# ── Auth check
[ "$HTTP_X_RELOAD_SECRET" = "$SECRET" ] || { echo Forbidden; exit 0; }

# ── Parse query string
DOMAIN="" ; EMAIL=""
IFS='&' read -ra KV <<< "$QUERY_STRING"
for kv in "${KV[@]}"; do
  k="${kv%%=*}" ; v="${kv#*=}"
  [ "$k" = "domain" ] && DOMAIN="$v"
  [ "$k" = "email"  ] && EMAIL="$v"
done
[ -n "$DOMAIN" ] && [ -n "$EMAIL" ] || { echo "Usage: ?domain=&email="; exit 0; }

echo ">>> certbot --apache -d $DOMAIN -d www.$DOMAIN (this may take a minute) …"
# Run Certbot and capture *both* exit code & stdout
OUT=$(sudo certbot --apache --non-interactive --agree-tos \
                   --reinstall \
                   --redirect \
                   --email "$EMAIL" \
                   -d "$DOMAIN" -d "www.$DOMAIN" 2>&1)
CODE=$?

echo "$OUT"
echo ">>> exit-code: $CODE"
[ $CODE -eq 0 ] && echo "CERTBOT_SUCCESS" || echo "CERTBOT_FAILED"

exit 0

```

