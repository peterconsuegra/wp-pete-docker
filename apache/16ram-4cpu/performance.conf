#######################################################################
# 0) Global safety timeouts (prod)
#######################################################################
Timeout 30
RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500

# Files on Docker volumes can misbehave with sendfile/MMAP → avoid bugs.
EnableSendfile Off
EnableMMAP     Off

#######################################################################
# 1) MPM Event — tuned for Docker limits (1.5 CPU / ~1.5 GB for Apache)
#    Goal: enough threads to serve H2 keep-alives/static without
#    overwhelming PHP-FPM (pm.max_children ≈ 24)
#######################################################################
<IfModule mpm_event_module>
    StartServers              2

    # 4 children × 64 threads = 256 MaxRequestWorkers
    # (Plenty for H2 concurrency; PHP-FPM still caps dynamic to ~24)
    ServerLimit               4
    ThreadsPerChild          64
    MaxRequestWorkers       256

    MinSpareThreads          64
    MaxSpareThreads         128

    MaxConnectionsPerChild 10000

    KeepAlive On
    KeepAliveTimeout 2
    MaxKeepAliveRequests 200
</IfModule>

#######################################################################
# 2) Core server hardening & small wins
#######################################################################
ServerTokens Prod
ServerSignature Off
TraceEnable Off
FileETag MTime Size

#######################################################################
# 3) HTTP/2 tuning (server push is deprecated → keep it off)
#######################################################################
Protocols h2 http/1.1
ProtocolsHonorOrder On
# Reasonable defaults for Woo + many small assets
H2MaxSessionStreams 100
H2StreamMaxMemSize 262144
H2WindowSize 6291456

#######################################################################
# 4) Compression (gzip; Brotli if module is present)
#######################################################################
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE \
    text/html text/plain text/css text/xml text/javascript \
    application/javascript application/json application/xml \
    image/svg+xml
  # Don’t waste CPU compressing already-compressed types
  SetEnvIfNoCase Request_URI "\.(?:gif|jpe?g|png|webp|avif|ico|pdf|zip|gz|bz2|7z|mp4|mp3|woff2?)$" no-gzip
</IfModule>

<IfModule brotli_module>
  BrotliCompressionQuality 5
  AddOutputFilterByType BROTLI_COMPRESS \
    text/html text/plain text/css text/xml text/javascript \
    application/javascript application/json application/xml \
    image/svg+xml
</IfModule>

#######################################################################
# 5) Far-future caching for static assets (client-side cache)
#######################################################################
<IfModule mod_expires.c>
  ExpiresActive On
  # cache static forever (rev via querystring or file name hashing)
  ExpiresByType text/css                   "access plus 1 year"
  ExpiresByType application/javascript     "access plus 1 year"
  ExpiresByType image/svg+xml              "access plus 1 year"
  ExpiresByType image/avif                 "access plus 1 year"
  ExpiresByType image/webp                 "access plus 1 year"
  ExpiresByType image/png                  "access plus 1 year"
  ExpiresByType image/jpeg                 "access plus 1 year"
  ExpiresByType image/gif                  "access plus 1 year"
  ExpiresByType font/woff2                 "access plus 1 year"
  ExpiresDefault                           "access plus 1 month"
</IfModule>

<IfModule mod_headers.c>
  <FilesMatch "\.(?:css|js|svg|avif|webp|png|jpe?g|gif|woff2?)$">
    Header unset ETag
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>
</IfModule>

#######################################################################
# 6) Disk cache (optional, safe rules) — avoid dynamic Woo endpoints
#     Apache container has limited RAM/CPU; keep this modest.
#######################################################################
<IfModule mod_cache.c>
  CacheQuickHandler On
  CacheLock On
  CacheLockPath /tmp/mod_cache-lock
  CacheIgnoreHeaders Set-Cookie
  CacheDefaultExpire 600
  CacheMaxExpire 3600
  CacheIgnoreNoLastMod On

  <IfModule mod_cache_disk.c>
    CacheRoot /var/cache/apache2/mod_cache_disk
    CacheDirLength 2
    CacheDirLevels 2
    # Enable only for static asset types (by URL suffix)
    CacheEnable disk "/"
    CacheDisable "/wp-admin"
    CacheDisable "/wp-login.php"
    CacheDisable "/cart"
    CacheDisable "/my-account"
    CacheDisable "/checkout"
    CacheDisable "/wc-api"
    CacheDisable "/?add-to-cart="
    # Don’t cache POSTs or cookied pages (Woo sessions)
    CacheDisableMatch "expr=%{REQUEST_METHOD} =~ m#POST#"
  </IfModule>
</IfModule>

#######################################################################
# 7) ModSecurity — skip rules for static to save CPU
#######################################################################
<IfModule security2_module>
  <LocationMatch "\.(?:ico|gif|jpe?g|png|svg|avif|webp|css|js|woff2?)$">
    SecRuleEngine Off
  </LocationMatch>
</IfModule>

#######################################################################
# 8) Small DoS safety valves (cheap protections)
#######################################################################
<IfModule mod_reqtimeout.c>
  RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
</IfModule>

<IfModule mod_ratelimit.c>
  # Example (disabled by default). Uncomment to throttle huge downloads:
  # <LocationMatch "\.(?:zip|tar|gz|bz2|7z|mp4)$">
  #   SetOutputFilter RATE_LIMIT
  #   SetEnv rate-limit 512
  # </LocationMatch>
</IfModule>
