#######################################################################
# Pete Panel – Apache performance (Event MPM) for CCX33 (32GB / 8 vCPU)
# Deployment: Docker, Apache (event) proxying to PHP-FPM
# Focus: WooCommerce/WordPress – many small H2 streams + dynamic PHP
#######################################################################

# ------------------------------
# 0) Safety/timeouts & I/O
# ------------------------------
Timeout 30
RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
# Avoid Docker volume/sendfile edge cases
EnableSendfile Off
EnableMMAP     Off

# ------------------------------
# 1) MPM Event – connection/thread model
# Keep Apache CPU light; PHP-FPM does the heavy lifting.
# Default target: ~0.7 vCPU container quota (compose) with room to burst.
# 8 children × 64 threads = 512 MaxRequestWorkers (cheap keep-alives/H2).
# ------------------------------
<IfModule mpm_event_module>
  StartServers               4

  ServerLimit                8
  ThreadsPerChild           64
  MaxRequestWorkers        512

  MinSpareThreads           96
  MaxSpareThreads          192

  # Recycle workers to avoid memory growth under long-lived H2 sessions
  MaxConnectionsPerChild 10000

  # KeepAlive: short but generous enough for H2 multiplexing
  KeepAlive On
  KeepAliveTimeout 2
  MaxKeepAliveRequests 200
</IfModule>

# ------------------------------
# 2) Core hardening & small wins
# ------------------------------
ServerTokens Prod
ServerSignature Off
TraceEnable Off
FileETag MTime Size

# ------------------------------
# 3) HTTP/2 tuning (no server push)
# WooCommerce → many concurrent small objects; keep stream cap reasonable.
# ------------------------------
<IfModule http2_module>
  Protocols h2 http/1.1
  ProtocolsHonorOrder On

  # Stream/session controls: keep memory per session modest
  H2MaxSessionStreams 100
  # Maximum number of bytes buffered in memory for a stream (256 KiB)
  H2StreamMaxMemSize 262144
  H2WindowSize 6291456
</IfModule>

# ------------------------------
# 4) Compression (gzip; brotli if available)
# Skip already-compressed types to save CPU.
# ------------------------------
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE \
    text/html text/plain text/css text/xml text/javascript \
    application/javascript application/json application/xml \
    image/svg+xml
  SetEnvIfNoCase Request_URI "\.(?:gif|jpe?g|png|webp|avif|ico|pdf|zip|gz|bz2|7z|mp4|mp3|woff2?)$" no-gzip
</IfModule>

<IfModule brotli_module>
  BrotliCompressionQuality 5
  AddOutputFilterByType BROTLI_COMPRESS \
    text/html text/plain text/css text/xml text/javascript \
    application/javascript application/json application/xml \
    image/svg+xml
</IfModule>

# ------------------------------
# 5) Client-side caching for static assets
# Long TTL on versioned assets; default sane cache otherwise.
# ------------------------------
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType text/css                       "access plus 1 year"
  ExpiresByType application/javascript         "access plus 1 year"
  ExpiresByType image/svg+xml                  "access plus 1 year"
  ExpiresByType image/avif                     "access plus 1 year"
  ExpiresByType image/webp                     "access plus 1 year"
  ExpiresByType image/png                      "access plus 1 year"
  ExpiresByType image/jpeg                     "access plus 1 year"
  ExpiresByType image/gif                      "access plus 1 year"
  ExpiresByType font/woff2                     "access plus 1 year"
  ExpiresDefault                               "access plus 1 month"
</IfModule>

<IfModule mod_headers.c>
  <FilesMatch "\.(?:css|js|svg|avif|webp|png|jpe?g|gif|woff2?)$">
    Header unset ETag
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>
</IfModule>

# ------------------------------
# 6) Disk cache (conservative, static only)
# Avoid dynamic endpoints (WC sessions, carts, checkouts, admin).
# ------------------------------
<IfModule mod_cache.c>
  CacheQuickHandler On
  CacheLock On
  CacheLockPath /tmp/mod_cache-lock
  CacheIgnoreHeaders Set-Cookie
  CacheDefaultExpire 600
  CacheMaxExpire 3600
  CacheIgnoreNoLastMod On

  <IfModule mod_cache_disk.c>
    CacheRoot /var/cache/apache2/mod_cache_disk
    CacheDirLength 2
    CacheDirLevels 2

    # Enable for generic paths; then disable dynamic
    CacheEnable disk "/"

    # Common Woo/WordPress dynamic endpoints to skip
    CacheDisable "/wp-admin"
    CacheDisable "/wp-login.php"
    CacheDisable "/cart"
    CacheDisable "/my-account"
    CacheDisable "/checkout"
    CacheDisable "/wc-api"
    CacheDisable "/?add-to-cart="
    # Don’t cache POSTs or requests with cookies (Woo sessions)
    CacheDisableMatch "expr=%{REQUEST_METHOD} =~ m#POST#"
  </IfModule>
</IfModule>

# ------------------------------
# 7) ModSecurity – skip static to save CPU
# ------------------------------
<IfModule security2_module>
  <LocationMatch "\.(?:ico|gif|jpe?g|png|svg|avif|webp|css|js|woff2?)$">
    SecRuleEngine Off
  </LocationMatch>
</IfModule>

# ------------------------------
# 8) Cheap DoS safety valves
# ------------------------------
<IfModule mod_reqtimeout.c>
  RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500
</IfModule>

<IfModule mod_ratelimit.c>
  # Example throttle for very large downloads (disabled by default)
  # <LocationMatch "\.(?:zip|tar|gz|bz2|7z|mp4)$">
  #   SetOutputFilter RATE_LIMIT
  #   SetEnv rate-limit 512
  # </LocationMatch>
</IfModule>

# ------------------------------
# 9) Logging (keep lean in production)
# ------------------------------
LogLevel warn
# Consider rotating frequently via logrotate (already configured in image)
